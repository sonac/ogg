// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

// TelegramBot is an autogenerated mock type for the TelegramBot type
type TelegramBot struct {
	mock.Mock
}

// AnswerCallbackQuery provides a mock function with given fields: _a0
func (_m *TelegramBot) AnswerCallbackQuery(_a0 tgbotapi.CallbackConfig) (tgbotapi.APIResponse, error) {
	ret := _m.Called(_a0)

	var r0 tgbotapi.APIResponse
	if rf, ok := ret.Get(0).(func(tgbotapi.CallbackConfig) tgbotapi.APIResponse); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(tgbotapi.APIResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(tgbotapi.CallbackConfig) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUpdatesChan provides a mock function with given fields: _a0
func (_m *TelegramBot) GetUpdatesChan(_a0 tgbotapi.UpdateConfig) (tgbotapi.UpdatesChannel, error) {
	ret := _m.Called(_a0)

	var r0 tgbotapi.UpdatesChannel
	if rf, ok := ret.Get(0).(func(tgbotapi.UpdateConfig) tgbotapi.UpdatesChannel); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(tgbotapi.UpdatesChannel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(tgbotapi.UpdateConfig) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Send provides a mock function with given fields: _a0
func (_m *TelegramBot) Send(_a0 tgbotapi.Chattable) (tgbotapi.Message, error) {
	ret := _m.Called(_a0)

	var r0 tgbotapi.Message
	if rf, ok := ret.Get(0).(func(tgbotapi.Chattable) tgbotapi.Message); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(tgbotapi.Message)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(tgbotapi.Chattable) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
